[loggers]
keys=root,sampleLogger

[handlers]
keys=consoleHandler

[formatters]
keys=sampleFormatter

[logger_root]
level=DEBUG
handlers=consoleHandler

[logger_sampleLogger]
level=DEBUG
handlers=consoleHandler
qualname=sampleLogger
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=sampleFormatter
args=(sys.stdout,)

[formatter_sampleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s

; В приведенном выше файле есть два регистратора, один обработчик и один форматтер.
; После определения их имен они настраиваются
; путем добавления слов logger, handler и formatter перед их именами, разделенными подчеркиванием.

; Чтобы загрузить этот файл конфигурации, вам необходимо использовать fileConfig(): \/ \/ \/

; import logging
; import logging.config
;
; logging.config.fileConfig(fname='config.ini', disable_existing_loggers=False)
;
; # Get the logger specified in the file
; logger = logging.getLogger(__name__)

; logger.debug('This is a debug message')
; 2018-07-13 13:57:45,467 - __main__ - DEBUG - This is a debug message

; Путь к файлу конфигурации передается в качестве параметра функции fileConfig(),
; и этот disable_existing_loggersпараметр используется
; для сохранения или отключения средств ведения журнала, присутствующих при вызове функции.
; По умолчанию используется, Trueесли не упомянуто.
